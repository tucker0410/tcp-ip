#ifndef SEG_H_
#define SEG_H_

struct segment{
	unsigned char sourcePort[2];
	unsigned char destPort[2];
	unsigned char seqNum[2];
	unsigned char ackNum[2];
	unsigned char syn[2];
	unsigned char fin[2];
	unsigned char data[2];
};

struct packet{
	unsigned char sourceIP[4];
	unsigned char destIP[4];
	struct segment * payload;
};

void rx_ethernet_isr (void *context);
void tx_ethernet_isr (void *context);
char * receive(int device);
unsigned char rx_data[1024] = { 0 };	// Create a receive frame vector
unsigned char tx_data[1024] = {0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC8,0x16,0x0B,0x93,0x67,0xDA,0x00,0x2E}; 	//Transmit Frame
volatile int * tse = (int *) TSE_BASE;	// Triple-speed Ethernet MegaCore base address
int in = 0;

int disconnect(int device);
int recDisconnect(int device);
int connect(int device, unsigned char * sourceIP, unsigned char * sourcePort, unsigned char * destinationIP, unsigned char * destinationPort);
int send(int device, unsigned char data);
void packetToString(struct packet pack, char * write);
int accept(int device);
int recv(int device);


#endif
